{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-da3920534d4ab767.js","src/main.ts"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"7dd44675b7a05eb9\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets /*: {|[string]: boolean|} */, assetsToDispose /*: Array<[ParcelRequire, string]> */, assetsToAccept /*: Array<[ParcelRequire, string]> */;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\nfunction getPort() {\n  return HMR_PORT || location.port;\n}\n\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');\n\n  // Web extension context\n  var extCtx = typeof chrome === 'undefined' ? typeof browser === 'undefined' ? null : browser : chrome;\n\n  // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n  var supportsSourceURL = false;\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  }\n\n  // $FlowFixMe\n  ws.onmessage = async function (event /*: {data: string, ...} */) {\n    checkedAssets = {} /*: {|[string]: boolean|} */;\n    assetsToAccept = [];\n    assetsToDispose = [];\n    var data /*: HMRMessage */ = JSON.parse(event.data);\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH);\n\n      // Handle HMR Update\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n      if (handled) {\n        console.clear();\n\n        // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n        await hmrApplyUpdates(assets);\n\n        // Dispose all old assets.\n        let processedAssets = {} /*: {|[string]: boolean|} */;\n        for (let i = 0; i < assetsToDispose.length; i++) {\n          let id = assetsToDispose[i][1];\n          if (!processedAssets[id]) {\n            hmrDispose(assetsToDispose[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n\n        // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n        processedAssets = {};\n        for (let i = 0; i < assetsToAccept.length; i++) {\n          let id = assetsToAccept[i][1];\n          if (!processedAssets[id]) {\n            hmrAccept(assetsToAccept[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n      } else fullReload();\n    }\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html);\n        // $FlowFixMe\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */{\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n  var parents = [];\n  var k, d, dep;\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n  return parents;\n}\nfunction updateLink(link) {\n  var href = link.getAttribute('href');\n  if (!href) {\n    return;\n  }\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n  newLink.setAttribute('href',\n  // $FlowFixMe\n  href.split('?')[0] + '?' + Date.now());\n  // $FlowFixMe\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href /*: string */ = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n    cssTimeout = null;\n  }, 50);\n}\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n      return new Promise((resolve, reject) => {\n        var _document$head;\n        script.onload = () => resolve(script);\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 ? void 0 : _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension bugfix for Chromium\n          // https://bugs.chromium.org/p/chromium/issues/detail?id=1255412#c12\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3) {\n            if (typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n              extCtx.runtime.reload();\n              return;\n            }\n            asset.url = extCtx.runtime.getURL('/__parcel_hmr_proxy__?url=' + encodeURIComponent(asset.url + '?t=' + Date.now()));\n            return hmrDownload(asset);\n          }\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n          (_document$head2 = document.head) === null || _document$head2 === void 0 ? void 0 : _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\nfunction hmrApply(bundle /*: ParcelRequire */, asset /*:  HMRAsset */) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      }\n\n      // $FlowFixMe\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    }\n\n    // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n    delete modules[id];\n    delete bundle.cache[id];\n\n    // Now delete the orphans.\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\nfunction hmrAcceptCheck(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  }\n\n  // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n      parents.push(...p);\n    }\n  }\n  return accepted;\n}\nfunction hmrAcceptCheckOne(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n  if (checkedAssets[id]) {\n    return true;\n  }\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToDispose.push([bundle, id]);\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n}\nfunction hmrDispose(bundle /*: ParcelRequire */, id /*: string */) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n  delete bundle.cache[id];\n}\nfunction hmrAccept(bundle /*: ParcelRequire */, id /*: string */) {\n  // Execute the module.\n  bundle(id);\n\n  // Run the accept callbacks in the new version of the module.\n  var cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        assetsToAlsoAccept.forEach(function (a) {\n          hmrDispose(a[0], a[1]);\n        });\n\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n}","// let hello: string = 'Hello world!';\r\n\r\n// hello = 'Hello~'\r\n\r\n// console.log(hello);\r\n\r\n// 타입 종류\r\n\r\n/// 문자\r\n// let str: string\r\n// let red: string = \"Red\";\r\n// let green: string = 'Green';\r\n// let myColor: string = `My color is ${red}.`\r\n// let yourColor: string = 'Your color is' + green\r\n\r\n/// 숫자\r\n// let num: number;\r\n// let integer: number = 6;\r\n// let float: number = 3.14;\r\n// let infinity: number = Infinity;\r\n// let nan: number = NaN;\r\n\r\n\r\n/// 불린\r\n// let isBoolean: boolean;\r\n// let isDone: boolean = false;\r\n\r\n\r\n/// Null / Undefined\r\n// let nul: null;\r\n// let und: undefined;\r\n// console.log(null);\r\n// console.log(und);\r\n\r\n\r\n/// 배열\r\n// const fruits: string[] = ['Apple', 'Banana', 'Cherry']\r\n// const numbers: number[] = [1,2,3,4,5,6,7]\r\n// const union: (string|number)[] = ['Apple', 1, 2, 'Banana', 3];\r\n// const array: [] = [1, 2, 3]; // number[] 이렇게 같이 작성해줘야됨\r\n\r\n\r\n/// 객체\r\n//typeof DATA === 'object'\r\n// const obj: object = {}\r\n// const arr: object = []\r\n// const func: object = function () {}\r\n// // 위 세개는 거의 안씀. 모두가 오브젝트라\r\n\r\n// const userA: {\r\n//     name: string,\r\n//     age: number,\r\n//     isValid: boolean\r\n// } = {\r\n//     name : 'abc',\r\n//     age: 85,\r\n//     isValid : true\r\n// }\r\n// const userB: {\r\n//     name: string,\r\n//     age: number,\r\n//     isValid: boolean\r\n// } = {\r\n//     name : 'Neo',\r\n//     age: 22,\r\n//     isValid : false\r\n// }\r\n// // 재활용하기 불편함이 있음. 나중에 interface를 씀\r\n// interface User {\r\n//     name: string,\r\n//     age: number,\r\n//     isValid: boolean\r\n// }\r\n// const userC : User = {\r\n//     name: 'ggg',\r\n//     age: 85,\r\n//     isValid : true,\r\n// }\r\n// const userD : User = {\r\n//     name: 'hhh',\r\n//     age: 22,\r\n//     isValid : false,\r\n// }\r\n\r\n\r\n/// 함수\r\n// const add: (x:number, y:number) => number = function(x,y) {\r\n//     return x+y;\r\n// }\r\n// 이렇게도 가능\r\n// const add = function (x:number, y:number) :number {\r\n//     return x+y;\r\n// }\r\n// const a: number = add(1,2);\r\n\r\n// const hello: () => void = function() {\r\n//     console.log('Hello world~');\r\n// }\r\n// 이렇게도 가능\r\n// const hello = function():void {\r\n//     console.log('Hello world~');\r\n// }\r\n// const h: void = hello();\r\n\r\n// function minus(x: number, y:number) :number {\r\n//     return x-y;\r\n// }\r\n\r\n\r\n/// Any\r\n// 코드를 엄격하게 관리해야 에러가 줄어들기 때문에 any는 자제하는 것이 좋다고 함\r\n// let hello: any = 'Hello world'\r\n// hello = 123\r\n// hello = false\r\n// hello = null\r\n// hello = {}\r\n// hello = []\r\n// hello = function () {}\r\n\r\n\r\n/// Unknown\r\n// const a: any = 123;\r\n// const u: unknown = 123;\r\n\r\n// const any: any = a;\r\n// const boo: boolean = a;\r\n// const num: number = a;\r\n// const arr: string[] = a;\r\n// const obj: {x:string, y:number} = a;\r\n\r\n// const any: any = u;\r\n// const boo: boolean = u;\r\n// const num: number = u;\r\n// const arr: string[] = u;\r\n// const obj: {x:string, y:number} = u;\r\n// 위 코드에 u를 넣으면 boo, num, arr, obj 모두 에러가 남\r\n\r\n\r\n/// Tuple\r\n// 온전히 순서가 정해져있을 떄 좋을듯\r\n// const tuple: [string, number, boolean] = ['a', 1, false];\r\n// const users: [number, string, boolean][] = [[1, 'Neo', true], [2, 'Evan', false], [3,'Lewis',true]]\r\n\r\n\r\n\r\n/// Void\r\n// function hello(msg: string): void {\r\n//     console.log(`Hello ${msg}`);\r\n// }\r\n// const hi: void = hello('world');\r\n\r\n\r\n/// Never\r\n// 직접 사용할 일은 없음. 타입 지정이 잘못되면 never 인것처럼 에러를 만나게 됨\r\n// const nev: [never] = []\r\n// nev.push(3)\r\n\r\n\r\n/// Union\r\n// 1가지 이상의 타입을 설정 가능\r\n// let union: string | number;\r\n// let union: (string | number)[]; // 배열은 타입을 묶어줘야됨\r\n// union = 'Hello type!';\r\n// union = 123;\r\n// union = false; //에러\r\n\r\n\r\n/// Intersection\r\n// interface User {\r\n//     name: string,\r\n//     age: number,\r\n// }\r\n// interface Validation {\r\n//     isValid: boolean,\r\n// }\r\n// const abc: User & Validation = {\r\n//     name: 'Neo',\r\n//     age: 85,\r\n//     isValid: true,\r\n// }\r\n\r\n// ------------------------------------------------------------------\r\n// 타입 추론 (Inference)\r\n// '추론' - 어떠한 판단을 근거로 삼아 다른 판단을 이끌어 냄.\r\n\r\n// 1) 초기화된 변수\r\n// 2) 기본값이 설정된 매개 변수\r\n// 3) 반환 값이 있는 함수\r\n\r\n// let num = 12\r\n// num = 'Hello type!';\r\n// 타입스크립트가 타입을 알아서 잘 추론하기 때문에 꼭 필요한 곳에서만 타입을 지정해줘도 됨\r\n\r\n// 초기화된 변수 `num`\r\n// let num = 12\r\n\r\n// 기본값이 지정된 매개 변수 `b` + 반환 값이 확실한 함수 `add`\r\n// function add(a: number, b = 2) {\r\n//     return a + b;\r\n// }\r\n\r\n\r\n//--------------------------------------------------------\r\n// 타입 단언(Assertion)\r\n// '단언' - 주저하지 아니하고 딱 잘라 말함.\r\n\r\n// 단언 키워드 - as\r\n// Non-null 단언 연산자 - !\r\n\r\n// 1)\r\n// const el = document.querySelector('body') as HTMLBodyElement;\r\n// el.textContent = 'Hello world?!';\r\n\r\n// const el = document.querySelector('body');\r\n// el!.textContent = 'Hello world?!';\r\n// 타입 에러가 발생하지않지만 문제가 발생 할 수 있음\r\n\r\n// 이런식으로 작성하면 타입스크립트와 상관없이 물리적으로 데이터가 있는 경우, 없는 경우를 나눌 수 있음. (타입 가드)\r\n// const el = document.querySelector('body');\r\n// if(el){\r\n//     el.textContent = 'Hello world?!';\r\n// }\r\n\r\n\r\n// 2)\r\n// function getNumber (x: number | null | undefined) {\r\n//     return Number((x as number).toFixed(2))\r\n// }\r\n// function getNumber (x: number | null | undefined) {\r\n//     return Number(x!.toFixed(2))\r\n// }\r\n// 이렇게 하면 number가 아닌 경우가 들어오게 됨 (문제 발생 가능)\r\n\r\n// 타입 가드 사용 (타입 단언)\r\n// function getNumber (x: number | null | undefined) {\r\n//     if(x){\r\n//         return Number(x.toFixed(2))\r\n//     }\r\n// }\r\n// getNumber(3.1415926535);\r\n// getNumber(null);\r\n\r\n\r\n// 3)\r\n// function getValue(x: string | number, isNumber : boolean) {\r\n//     if(isNumber){\r\n//         return Number((x as number).toFixed(2))\r\n//     }\r\n//     return (x as string).toUpperCase()\r\n// }\r\n// // 이 부분은 number와 string을 지정해주어야 함\r\n// getValue('Hello world', false) //'HELLO WORLD'\r\n// getValue(3.1415926535,true); // 3.14\r\n\r\n\r\n\r\n// 할당 단언 (Assertion)\r\n// '단언' - 주저하지 아니하고 딱 잘라 말함.\r\n// non-null 연산자 ! 아니고 할당 단언임. num에 값을 할당해야하는데 없이 넘어 갈 수 있도록 선언\r\n// let num!: number\r\n// console.log(num); // undefiend\r\n\r\n\r\n//---------------------------------- 타입 가드\r\n// 타입 가드 (Guards)\r\n\r\n// function logText(el: Element) {\r\n//     console.log(el.textContent);\r\n// }\r\n\r\n// // const h1El = document.querySelector('h1') as HTMLHeadingElement;\r\n// // logText(h1El); // 콘솔에서 타입 에러가 남. 타입 가드 필요\r\n\r\n// const h1El = document.querySelector('h1');\r\n// // h1El이 거짓 조건이 아닐때를 사용. 타입 가드를 추가.\r\n// if(h1El){\r\n//     logText(h1El);\r\n// }\r\n// // or\r\n// if(h1El instanceof HTMLHeadingElement){ // h1El가 어떤 엘리먼트 클래스인지 붙혀줘서 null이 아닌 조건을 작성해줌.\r\n//     logText(h1El);\r\n// }\r\n\r\n// 새로운 예제\r\n// function add(val: string | number) {\r\n//     let res = 'Result => '\r\n//     if(typeof val === 'number'){\r\n//         res += val.toFixed(2)\r\n//     }else {\r\n//         res += val.toUpperCase()\r\n//     }\r\n//     console.log(res);\r\n// }\r\n\r\n// function add(val: string | number | boolean) {\r\n//     let res = 'Result => '\r\n//     if(typeof val === 'number'){\r\n//         res += val.toFixed(2)\r\n//     }\r\n//     if(typeof val === 'string') {\r\n//         res += val.toUpperCase()        \r\n//     }\r\n//     console.log(res);\r\n// }\r\n\r\n// add(3.141592);\r\n// add('hello world');\r\n\r\n\r\n\r\n// ------------------ 인터페이스 - 기본\r\n// 인터페이스(Interface)\r\n\r\n// 선택적 속성 - ?\r\n// 읽기전용 속성 - readonly\r\n\r\n// interface User { // pascal case로 이름을 지어줌\r\n//     name: string,\r\n//     readonly age: number, // 읽기만 되서 값을 할당 못함\r\n//     isValid? : boolean //  선택적으로 사용 가능. 필수 아님.\r\n// }\r\n// const abc: User = {\r\n//     name : 'abc',\r\n//     age: 85,\r\n//     isValid : true,\r\n// }\r\n// abc.isValid = false; // 할당 가능\r\n// abc.age = 22; // 할당 불가능 에러남\r\n\r\n// const neo: User = {\r\n//     name: 'Neo',\r\n//     age: 102,\r\n//     // isValid를 선택적으로 바꾸고 에러 없어짐\r\n// }\r\n\r\n\r\n\r\n// 인터페이스 함수 타입 - 호출 시그니처(Call Signature) (소괄호)\r\n// 인덱스 가능 타입 - 인덱스 시그니처 (Index Signature)\r\n// 확장 (상속)\r\n\r\n\r\n// 인덱스 함수 타입\r\n\r\n// interface GetName {\r\n//     (message: string): string\r\n// } // 1) 이렇게 사용가능 (재사용시 사용)\r\n// interface User {\r\n//     name : string,\r\n//     age: number,\r\n//     // getName : GetName, //1)\r\n//     getName : (meesage: string) => string // 2) 재사용하지 않을때 선언 가능 message를 param으로 적어도 가능\r\n// }\r\n// const abc: User = {\r\n//     name: 'abc',\r\n//     age: 85,\r\n//     getName(message: string){\r\n//         console.log(message);\r\n//         return this.name;\r\n//     }\r\n// }\r\n// abc.getName('Hello~');\r\n\r\n\r\n// // 인터페이스 - 인덱싱 가능 타입 - 인덱스 시그니처 (Index Signature) (대괄호, 배열 타입을 지정)\r\n\r\n// // 배열\r\n// interface Fruits {\r\n//     [item: number] : string\r\n// }\r\n// const fruits : Fruits = ['Apple', 'Banana', 'Cherry'];\r\n// console.log(fruits);\r\n// console.log(fruits[1]);\r\n\r\n// // 객체\r\n// interface User {\r\n//     [key :string] : unknown, // 대괄호를 사용해서 인덱스를 검색 가능, 배열값이나 불린 등 어느 값이 올지 모르니 unknown 사용했음\r\n//     name: string\r\n//     age: number\r\n// }\r\n// const bcd: User  = {\r\n//     name: 'abc',\r\n//     age: 85,\r\n// }\r\n// bcd['isValid'] = true;\r\n// bcd['emails'] = ['abc@gmail.com', 'test@gmail.com']\r\n// console.log(bcd);\r\n\r\n\r\n// 추가 예제\r\n// interface Payload {\r\n//     [key: string] : unknown\r\n// }\r\n// function logValues(payload : Payload) {\r\n//     for( const key in payload) {\r\n//         console.log(payload[key]);\r\n//     }\r\n// }\r\n// interface User {\r\n//     [key: string] : unknown // 인덱스 가능한 타입으로 만들기 위해 작성\r\n//     name: string\r\n//     age: number\r\n//     isValid: boolean\r\n// }\r\n// const efg: User = {\r\n//     name: 'abc',\r\n//     age: 85,\r\n//     isValid: true,\r\n// }\r\n// logValues(efg);\r\n\r\n\r\n\r\n// 인터페이스 (Interface)\r\n// 확장(상속)\r\n\r\n// interface UserA {\r\n//     name: string\r\n//     age: number\r\n// }\r\n// interface UserB extends UserA{\r\n//     isValid : boolean\r\n// }\r\n\r\n// const abc: UserA = {\r\n//     name : 'abc',\r\n//     age: 85,\r\n//     isValid : true,\r\n// }\r\n// const neo: UserB = {\r\n//     name: 'Neo',\r\n//     age: 102,\r\n//     isValid: true\r\n// }\r\n\r\n// 다른 예제\r\n// interface FullName {\r\n//     firstName: string\r\n//     lastName : string\r\n// }\r\n// interface FullName {\r\n//     middleName: string\r\n//     // lastName : boolean // 기존 속성과 달라서 에러남\r\n//     lastName : string\r\n// }\r\n// // 동일한 이름의 인터페이스 생성 가능하나,  기존 존재하는 속성의 타입을 그대로 작성해줘야 함\r\n\r\n// const fullName : FullName = {\r\n//     firstName : 'Tomas',\r\n//     middleName : 'Sean',\r\n//     lastName : 'Connery'\r\n// }\r\n\r\n\r\n// 타입 별칭(Alias)\r\n// 별칭을 만들때 앞에 type 을 사용\r\n\r\n// type TypeA = string // 원하는 이름으로 지정\r\n// type TypeB = string | number | boolean\r\n// type User = {\r\n//     name: string\r\n//     age: number\r\n//     isValid : boolean\r\n// } | [string, number, boolean]\r\n\r\n// const userA : User = {\r\n//     name: 'Neo',\r\n//     age: 85,\r\n//     isValid: true,\r\n// }\r\n// const userB : User = ['Evan', 36, false];\r\n\r\n// function someFunc(param: TypeB): TypeA {\r\n//     switch (typeof param){\r\n//         case 'string':\r\n//             return param.toUpperCase()\r\n//         case 'number':\r\n//             return param.toFixed(2)\r\n//         default :\r\n//             // return true\r\n//             return 'Boolean!'\r\n//     }\r\n// }\r\n\r\n\r\n// 인터페이스를 대신하여 type을 사용\r\n// type TypeUser = { // = 할당연산자가 type 별칭에는 꼭 필요\r\n//     name: string\r\n//     age: number\r\n//     isValid : boolean\r\n// }\r\n// interface InterfaceUser {\r\n//     name: string\r\n//     age: number\r\n//     isValid: boolean\r\n// }\r\n\r\n// const abc: TypeUser = {\r\n//     name: 'abc',\r\n//     age: 85,\r\n//     isValid: true\r\n// }\r\n// // 둘다 사용 가능한데 취향차이지만, 굳이 따지자면 Interface 방식을 추천. 별칭은 좀 더 사용범위가 넓어서 굳이 고르자면 인터페이스를 사용을 권장\r\n// const abc: InterfaceUser = {\r\n//     name: 'abc',\r\n//     age: 85,\r\n//     isValid: true\r\n// }\r\n\r\n\r\n// 함수 - 명시적 this\r\n\r\n// interface Cat {\r\n//     name: string\r\n//     age: number\r\n// }\r\n// const cat: Cat = {\r\n//     name : 'Lucy',\r\n//     age:3\r\n// }\r\n\r\n// function hello(this: Cat, message: string) { // this는 매개변수라기보다 위에서 정한 타입을 정하는 것이라고 생각하면 됨\r\n//     console.log(`Hello ${this.name}, ${message}`)\r\n// }\r\n// hello.call(cat, 'You are pretty awesome!'); // call메소드는 함수나 메소드 뒤에서 바로 사용 함수가 메소드가 어떤 대상에서 실행될 것인지 정하는 것 \r\n// // cat 객체 데이터 기준에서 호출. this.는 cat에서 오는 것.\r\n\r\n\r\n\r\n// // -------\r\n// // 함수 - 오버로딩 (Overloading)\r\n\r\n// // 1)\r\n// function add1(a: string, b:string){\r\n//     return a + b;\r\n// }\r\n// function add2(a:number, b:number){\r\n//     return a + b;\r\n// }\r\n// add1('hello ', 'world~') // 'hello world~'\r\n// add2(1,2) // 3\r\n// add1('hello ', 2) // 타입이 안맞아서 에러남\r\n// add2('hello ', 2) // 타입이 안맞아서 에러남\r\n\r\n\r\n// // 2) 오버로딩\r\n// function add(a:string, b: string) : string // 1 타입 선언\r\n// function add(a:number, b: number) : number // 2 타입 선언\r\n// function add(a:any, b: any) { // 함수 구현 타입선언 1,2를 일치하게 할당되도록 함\r\n//     return a + b;\r\n// }\r\n// add('hello ', 'world~') // 'hello world~'\r\n// add(1, 2) // 3\r\n// add('hello ', 2) // 타입이 안맞아서 에러\r\n// add(1, 'world~') // 타입이 안맞아서 에러\r\n\r\n\r\n\r\n// -----------------------------\r\n// 클래스\r\n\r\n// 접근제어자 (Acess Modifiers)\r\n// public - 어디서나 자유롭게 접근 가능, 클래스 바디에서 생략 가능\r\n// protected - 나와 파생된 후손 클래스 내에서 접근 가능\r\n// private - 내 클래스에서만 접근 가능\r\n\r\n\r\n// class UserA {\r\n//     //타입스크립트는 먼저 속성을 적어주어야 에러가 뜨지 않음\r\n//     // public first: string = ''\r\n//     // public last: string = ''\r\n//     // public age: number = 0\r\n//     // constructor(first: string, last: string, age: number) {\r\n//     //     this.first = first\r\n//     //     this.last = last\r\n//     //     this.age = age\r\n//     // }\r\n//     // 위 방식 말고 다른 방식\r\n//     constructor(\r\n//         // public은 생략 불가\r\n//         public first: string = '', \r\n//         public last: string = '', \r\n//         public age: number = 0) {\r\n//             // ...\r\n//         }\r\n//     getAge() {\r\n//         return `${this.first} ${this.last} is ${this.age}`\r\n//     }\r\n// }\r\n\r\n// class UserB extends UserA {\r\n//     getAge() {\r\n//         return `${this.first} ${this.last} is ${this.age}`\r\n//     }\r\n// }\r\n\r\n// class UserC extends UserB {\r\n//     getAge() {\r\n//         return `${this.first} ${this.last} is ${this.age}`\r\n//     }\r\n// }\r\n\r\n// const neo = new UserA('Neo', 'Anderson', 102);\r\n// console.log(neo.first)\r\n// console.log(neo.last)\r\n// console.log(neo.age)\r\n\r\n\r\n// --------------------------------\r\n// 제네릭 (Generic)\r\n/// 함수\r\n\r\ninterface Obj {\r\n    x: number\r\n}\r\ntype Arr = [number, number];\r\n\r\n// 기존 오버로딩 방식\r\n// function toArray(a: string, b:string) : string[]\r\n// function toArray(a: number, b:number) : number[]\r\n// function toArray(a: boolean, b:boolean) : boolean[]\r\n// function toArray(a: Obj, b:Obj) : Obj[]\r\n// function toArray(a: Arr, b:Arr) : Arr[]\r\n// function toArray(a: any, b:any){\r\n//     return [a, b];\r\n// }\r\n\r\n//제네릭 방식\r\n// function toArray<T>(a: T, b:T){ // type혹은 T로 사용 (제네릭)\r\n//     return [a, b];\r\n// }\r\n\r\n// console.log(\r\n//     // toArray('Neo', 'Anderson'),\r\n//     // toArray(1, 2),\r\n//     // toArray(true, false),\r\n//     // toArray({x:1}, {x:2}),\r\n//     // toArray([1,2],[3,4]),\r\n\r\n//     toArray<string>('Neo', 'Anderson'), // <string>으로 표현 가능 (명시)\r\n//     toArray(1, 2),\r\n//     toArray(true, false),\r\n//     toArray({x:1}, {x:2}),\r\n//     toArray<Arr>([1,2],[3,4]), // number[]에서 <Arr>로 직접 지정해줌\r\n// );\r\n\r\n\r\n// // 제네릭\r\n// /// 클래스\r\n// class User<P>{\r\n//     // public payload: P\r\n//     // constructor(payload:P) {this.payload = payload}\r\n//     constructor(public payload: P) {}\r\n//     getPayload() {\r\n//         return this.payload\r\n//     } \r\n// }\r\n\r\n// interface UserAType {\r\n//     name: string\r\n//     age : number\r\n//     isValid : boolean\r\n// }\r\n\r\n// interface UserBType {\r\n//     name: string\r\n//     age : number\r\n//     emails : string[]\r\n// }\r\n\r\n// const abc = new User <UserAType>({\r\n//     name: 'abc',\r\n//     age: 85,\r\n//     isValid : true,\r\n//     // emails : 'abc@gmail.com'\r\n// });\r\n\r\n// const neo = new User <UserBType>({\r\n//     name: 'neo',\r\n//     age: 102,\r\n//     // isValid : false,\r\n//     emails: ['neo@gmail.com'] // ?!\r\n// });\r\n\r\n\r\n// 제네릭\r\n/// 인터페이스, 제약 조건(Constraints)\r\n\r\n// interface MyData<T>{\r\n// // interface MyData<T extends string | number> {\r\n//     name: string\r\n//     value: T\r\n// }\r\n// const dataA: MyData<string> = {\r\n//     name: 'data A',\r\n//     value: 'Hello world'\r\n// }\r\n// const dataB: MyData<number> = {\r\n//     name: 'Data B',\r\n//     value: 1234\r\n// }\r\n// const dataC: MyData<boolean> = {\r\n//     name: 'Data C',\r\n//     value: true\r\n// }\r\n// const dataD: MyData<number[]> = {\r\n//     name: 'Data D',\r\n//     value: [1,2,3,4]\r\n// }\r\n\r\n\r\n// -----------------------------------\r\n// 패키지의 타입 선언\r\n // /// <reference path=\"./lodash.d.ts\" /> \r\n// 삼중슬래시 지시자 / 참조태그 파일명을 lodash.d.ts 말고 다른거 할 때 이렇게 해서 잡아줌 슬래시 3번 필수\r\n// import _ from 'lodash'\r\n\r\n// const str = 'the brown fox jumps over the lazy dog.'\r\n\r\n// console.log(_.camelCase(str))\r\n// console.log(_.snakeCase(str))\r\n// console.log(_.kebabCase(str))\r\n\r\n// 구글에 DefinitelyTyped\r\n// npm install @types/lodash -D\r\n// 필요한 거를 찾아서 사용\r\n\r\n\r\n// ----------------------------------------------\r\n// 타입 가져오기와 내보내기\r\n\r\n// import { getFullName, User } from './user';\r\n\r\n// const abc: User = {\r\n//     firstName : 'abc',\r\n//     lastName : 'Lee',\r\n//     age:85,\r\n//     isValid:true\r\n// }\r\n// const fullName = getFullName(abc)\r\n\r\n// console.log(fullName)\r\n// console.log(abc.isValid)\r\n\r\n\r\n\r\n// ----------------------- \r\n// tsconfig.json 구성 옵션\r\n// README.md 파일에 작성\r\n"],"names":[],"version":3,"file":"index.b7a05eb9.js.map","sourceRoot":"/__parcel_source_root/"}